#!/bin/bash

# Path to the current directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"

# Function to check if terraform is installed
check_terraform() {
  if ! command -v terraform &> /dev/null; then
    echo "Terraform is not installed. Please install Terraform to continue."
    echo "Visit https://developer.hashicorp.com/terraform/install for installation instructions."
    exit 1
  fi
}

# Function to extract the PERMIT_API_KEY from .env
get_permit_api_key() {
  if [ -f "$SCRIPT_DIR/.env" ]; then
    # Extract key and remove any quotes
    PERMIT_API_KEY=$(grep PERMIT_API_KEY "$SCRIPT_DIR/.env" | cut -d= -f2 | sed 's/^"\(.*\)"$/\1/' | sed "s/^'\(.*\)'$/\1/")
    echo "Found PERMIT_API_KEY in .env file"
  else
    echo "Error: .env file not found. Please create one with a valid PERMIT_API_KEY."
    exit 1
  fi
}

# Function to update terraform.tfvars with the PERMIT_API_KEY
update_tfvars() {
  echo "Updating terraform.tfvars with PERMIT_API_KEY..."
  # Create a new tfvars file with the proper PERMIT_API_KEY
  cat > "$SCRIPT_DIR/terraform/terraform.tfvars" << EOF
# Generated by startup script
PERMIT_API_KEY = "${PERMIT_API_KEY}"
EOF
  echo "Updated terraform.tfvars successfully"
}

# Function to initialize and apply Terraform configuration
apply_terraform() {
  echo "Initializing Terraform..."
  cd "$SCRIPT_DIR/terraform" || exit 1
  terraform init
  
  echo "Applying Terraform configuration..."
  terraform apply -auto-approve
  
  if [ $? -eq 0 ]; then
    echo "Terraform applied successfully"
  else
    echo "Error: Terraform apply failed"
    exit 1
  fi
  
  cd "$SCRIPT_DIR" || exit 1
}

# Function to start Docker Compose services
start_docker_compose() {
  echo "Starting Docker Compose services..."
  docker-compose up -d
  
  if [ $? -eq 0 ]; then
    echo "Docker Compose services started successfully"
  else
    echo "Error: Failed to start Docker Compose services"
    exit 1
  fi
}

# Main execution
echo "Starting FusionAuth with Permit.io configuration..."

# Check if terraform is installed
check_terraform

# Get the PERMIT_API_KEY from .env
get_permit_api_key

# Update terraform.tfvars
update_tfvars

# Apply Terraform configuration
apply_terraform

# Start Docker Compose services
start_docker_compose

echo "Startup complete. The application should now be running with the appropriate Permit.io configuration." 